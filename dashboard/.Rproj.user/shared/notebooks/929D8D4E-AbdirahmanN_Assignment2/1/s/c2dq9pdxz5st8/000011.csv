"0",""
"0",""
"0","# Initialize a list to store IDW results"
"0","idw_results <- list()"
"0",""
"0","# Define power coefficients"
"0","power_coefficients <- c(0, 1, 2)"
"0",""
"0","# Loop over power coefficients to perform IDW"
"0","for (power in power_coefficients) {"
"0","  idw <- gstat::gstat(formula = annual ~ 1, "
"0","                      locations = rainfall_sf, "
"0","                      nmax = nrow(rainfall_sf),  # Use all neighbors"
"0","                      set = list(idp = power))   # beta= power"
"0","  "
"0","  # Interpolate"
"0","  idw.sf <- raster::predict(idw, pred_locations)"
"0","  "
"0","  # Convert interpolated results to a data frame"
"0","  idw.sf2 <- idw.sf %>%"
"0","    mutate(x = st_coordinates(idw.sf)[, 1],"
"0","           y = st_coordinates(idw.sf)[, 2],"
"0","           pred.annualRain = var1.pred)"
"0","  "
"0","  # Store results in the list"
"0","  idw_results[[as.character(power)]] <- idw.sf2"
"0","}"
"1","[inverse distance weighted interpolation]
"
"1","[inverse distance weighted interpolation]
"
"1","[inverse distance weighted interpolation]
"
"0","# Plot IDW results for different power coefficients"
"0","for (power in power_coefficients) {"
"0","  p <- idw_results[[as.character(power)]] %>% "
"0","    ggplot() + "
"0","    geom_sf(data = border, fill = ""blue"", color = ""black"") +  "
"0","    geom_sf(aes(col = pred.annualRain), size = 0.5) + "
"0","    scale_color_viridis_c() + theme_bw() +"
"0","    labs(title = paste(""IDW Interpolation with Power ="", power),"
"0","         y = ""Latitude"","
"0","         x = ""Longitude"","
"0","         color = ""Predicted Annual Rainfall"")"
"0","  "
"0","  print(p)"
"0","}"
